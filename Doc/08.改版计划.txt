1,硬件更改
	1.1,接口线序修正
	1.2,LCD数据线加上拉电阻
	1.3,去掉时钟芯片
	1.4,USB改为标准接口
	1.5,3G模块RTS与CTS短接
	1.6,3G模块引入LED指示
	1.7,STM32的晶振增加封装
	1.8,3G模块增加电平转换芯片
	1.9,物料清单把相似电阻统一化
	1.10,修改基准源芯片为TI的2.5V基准芯片
	1.11,复位按键封装改为2插孔封装
	1.12,32.768k晶振封装改为公司统一封装
	1.13,基准源用3.3V电源还是用2.5V基准源,0欧姆电阻切换电路修正,另外如果用3.3V要加10u-100uH的电感
	1.14,USB电源引脚电阻(R65)封装改为两孔
	1.22,nRF51822电源端接10k下拉电阻,由于芯片耗电极低,电容导致芯片长时间不能完全关断从而不能够有效再上电,解决nRF51822潜在死机问题。
	1.23,nRF51822电路的R99与L99丝印层标反.
	1.24,RFMS与STM32的TxRx硬件反向
2,软件更改
	2.3,移植emWin
	2.4,http网站可配置
	2.6,网络/基站校时
	2.11,发布版本开启看门狗
	2.12,3G通讯出现问题时，自动重启。
	2.13,考虑定时重启，以便修复未知问题。
	2.15,温湿度之前读取正确,之后读取错误,应该把它设置为错误模式,目前还是保留上一次值不变.
	2.18,3G进行Http传输后，只是监控模块的OK或ERR响应指令,但是如果模块没有回传响应,当前程序也许就不能再进行Http传输,需改善
	2.19,有条件的重启动,增加系统稳定性.
	2.21,闹钟判断的优化,当当前时间偏离闹钟定时时间很远时,不必每秒扫描判断一次,从而降低CPU运行负担.
	2.23,增加测试菜单
3,工程类修改	
	3.1,STM32F4工程有多个中断组设定,需要统一(搜索NVIC_PriorityGroupConfig)
	3.3,不应再单独启动定时器，而应该统一使用系统定时器(改善Bsp_Tim.c)
	3.4,关注一下STM32F1与STM32F4的时钟总线频率。
	3.5,关注V5资料，包括很多库(例如sim300),熟悉这些库应用
	3.7,重启次数统计
	    解决方案: 
	    在Bsp_Rtc中分类,能够累加重启次数，但是目前无法判定重启激发源,原因待查.
	3.8,有部分库文件(如stm32f10x.h)在MDK安装路径,导致工程挪到其他电脑如果MDK版本不对有编译不通过的现象
	3.9,GPRS串口驱动程序需要改善(发送)
	3.10,程序加入读写保护
	3.11,应用启动看门狗
	3.12,内存管理代码优化
	3.16,在F4的工程中会因为RFMS模块的串口未初始化导致USB的VPC功能无法使用.
		解决方案: 
		在初始化USB时，默认将PA9初始化为VBUS功能,导致与UART1冲突.(屏蔽usb_conf.h中的VBUS_SENSING_ENABLED即可)
	3.17,F4的USB不稳定，运行一会就导致系统死机.
		解决方案: ST提供的USB库实例中usbd_cdc_vpc.c中有代码导致内存溢出,已解决
		另: 有时间在count.c中编写一个缓存环存储函数,使快速复制数据。
	3.18,uCOSIII好像有时间戳,研究具体用法.
	3.19,STM32F1支持UCOSIII
	 	解决方案: 
	 		startup_stm32f10x_hd.s描述的中断名称与os_cpu_c.c中的中断函数名称不同。
	 		衡量利弊,修改了文件startup_stm32f10x_hd.s.
	 		PendSV_Handler	-->	OS_CPU_PendSVHandler
	 		SysTick_Handler	-->	OS_CPU_SysTickHandler
	 	注意1:
	 		由于STM32F1与F4的USB硬件完全不同,F1只是设备,而F4是OTG,所以作为VPC使用时要用不同的驱动.
	 	注意2:
	 		STM32F1与F4的内部Flash最好分配同样地址,目前由于Flash分配问题导致moudle_mem...
	 	